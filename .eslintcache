[{"/Users/maxchen/Desktop/code/collective/src/index.js":"1","/Users/maxchen/Desktop/code/collective/src/App.js":"2","/Users/maxchen/Desktop/code/collective/src/reportWebVitals.js":"3","/Users/maxchen/Desktop/code/collective/src/components/home.jsx":"4","/Users/maxchen/Desktop/code/collective/src/config/keys.js":"5","/Users/maxchen/Desktop/code/collective/src/components/sidebar.jsx":"6","/Users/maxchen/Desktop/code/collective/src/util/reddit_util.js":"7","/Users/maxchen/Desktop/code/collective/src/util/snoowrap_util.js":"8","/Users/maxchen/Desktop/code/collective/src/components/login.jsx":"9","/Users/maxchen/Desktop/code/collective/src/util/routes.js":"10","/Users/maxchen/Desktop/code/collective/src/components/subreddits/subreddit_item.jsx":"11","/Users/maxchen/Desktop/code/collective/src/components/subreddits/ItemTypes.js":"12","/Users/maxchen/Desktop/code/collective/src/util/reddit.jsx":"13","/Users/maxchen/Desktop/code/collective/src/components/view.jsx":"14","/Users/maxchen/Desktop/code/collective/src/components/subreddits/iframe.jsx":"15","/Users/maxchen/Desktop/code/collective/src/components/subreddits/subreddit_view.jsx":"16","/Users/maxchen/Desktop/code/collective/src/components/subreddits/navbar.jsx":"17","/Users/maxchen/Desktop/code/collective/src/components/subreddits/posts_item.jsx":"18","/Users/maxchen/Desktop/code/collective/src/components/posts_comments.jsx":"19"},{"size":676,"mtime":1611725857116,"results":"20","hashOfConfig":"21"},{"size":591,"mtime":1612414130797,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1611317218618,"results":"23","hashOfConfig":"21"},{"size":1302,"mtime":1612414225855,"results":"24","hashOfConfig":"21"},{"size":99,"mtime":1611322974074,"results":"25","hashOfConfig":"21"},{"size":1615,"mtime":1613441114749,"results":"26","hashOfConfig":"21"},{"size":1409,"mtime":1612417042459,"results":"27","hashOfConfig":"21"},{"size":1824,"mtime":1614253363567,"results":"28","hashOfConfig":"21"},{"size":408,"mtime":1613688768146,"results":"29","hashOfConfig":"21"},{"size":297,"mtime":1611383988080,"results":"30","hashOfConfig":"21"},{"size":626,"mtime":1612434609280,"results":"31","hashOfConfig":"21"},{"size":58,"mtime":1611800208623,"results":"32","hashOfConfig":"21"},{"size":638,"mtime":1611802087295,"results":"33","hashOfConfig":"21"},{"size":2160,"mtime":1614253516190,"results":"34","hashOfConfig":"21"},{"size":427,"mtime":1611810986611,"results":"35","hashOfConfig":"21"},{"size":1220,"mtime":1614254569463,"results":"36","hashOfConfig":"21"},{"size":467,"mtime":1613698801965,"results":"37","hashOfConfig":"21"},{"size":5931,"mtime":1614259165782,"results":"38","hashOfConfig":"21"},{"size":959,"mtime":1614258784642,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"r79r9a",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/maxchen/Desktop/code/collective/src/index.js",[],["83","84"],"/Users/maxchen/Desktop/code/collective/src/App.js",[],"/Users/maxchen/Desktop/code/collective/src/reportWebVitals.js",[],"/Users/maxchen/Desktop/code/collective/src/components/home.jsx",[],"/Users/maxchen/Desktop/code/collective/src/config/keys.js",[],"/Users/maxchen/Desktop/code/collective/src/components/sidebar.jsx",[],"/Users/maxchen/Desktop/code/collective/src/util/reddit_util.js",[],"/Users/maxchen/Desktop/code/collective/src/util/snoowrap_util.js",[],"/Users/maxchen/Desktop/code/collective/src/components/login.jsx",[],"/Users/maxchen/Desktop/code/collective/src/util/routes.js",[],"/Users/maxchen/Desktop/code/collective/src/components/subreddits/subreddit_item.jsx",["85"],"import React from 'react';\nimport {ItemTypes} from './ItemTypes';\nimport {useDrag} from 'react-dnd';\n\nexport const SubredditItem = ({subreddit}) => {\n  const [{isDragging}, drag] = useDrag({\n    item: {name:'subreddit_item',type: ItemTypes.SUBREDDIT_ITEM, obj: subreddit},\n    end: (item, monitor) => {\n      const dropResult = monitor.getDropResult();\n      // console.log(dropResult);\n    },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  })\n  return(\n    <div\n      ref={drag}\n      style={{\n        opacity: isDragging ? 0.2 : 1      \n      }}\n    >\n      {subreddit.url}\n    </div>\n  )\n}","/Users/maxchen/Desktop/code/collective/src/components/subreddits/ItemTypes.js",[],"/Users/maxchen/Desktop/code/collective/src/util/reddit.jsx",[],"/Users/maxchen/Desktop/code/collective/src/components/view.jsx",["86","87","88","89","90"],"import React, {useState, useEffect} from 'react';\nimport {ItemTypes} from './subreddits/ItemTypes';\nimport {DropTarget, useDrop} from 'react-dnd';\nimport {getSubredditContent, getSubredditHot} from '../util/snoowrap_util';\nimport {SubredditView} from './subreddits/subreddit_view';\n\nexport const View = () => {\n  const[{canDrop, isOver}, drop] = useDrop({\n    accept: ItemTypes.SUBREDDIT_ITEM,\n    drop: (item, monitor) => {\n      renderSubreddit(item);\n      return item;\n    },\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n  const [selectedSubreddit, setSubredditContent] = useState([]);\n  const [subredditListings, setSubredditListings] = useState([]);\n  const [columns, setNumberOfColumns] = useState(1);\n\n  const renderSubreddit = async (item) => {\n    const subreddit = item.obj;\n    await getSubredditContent(subreddit.display_name)\n    .then((res) =>{\n      setSubredditContent(state => [res, ...state]);\n    })\n    .catch(err => {\n      console.error(err);\n    });\n    await getSubredditHot(subreddit.display_name)\n    .then((res) => {\n      setSubredditListings(state => [...res]);\n    })\n    .catch(err => {\n      console.error(err);\n    });\n  }\n\n  return (\n    <>\n      <div ref={drop} \n        style={{\n          width: '100vw', \n          height: '100vh',\n          zIndex: 1,\n        }}\n        className=\"viewContainer\">\n        <div>\n          {\n            selectedSubreddit.length === 0 ?\n            <SubredditView \n              content = {selectedSubreddit} \n              listings = {subredditListings}\n            /> : \n            <SubredditView \n              content = {selectedSubreddit[0]}\n              listings = {subredditListings} \n            />\n          }\n          {isOver && (\n            <div\n              style={{\n                position: 'fixed',\n                top: 0,\n                left: '16.6vw',\n                height: '100%',\n                width: '100%',\n                zIndex: 1,\n                opacity: 0.3,\n                backgroundColor: '#2699FB',\n              }}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  )\n}","/Users/maxchen/Desktop/code/collective/src/components/subreddits/iframe.jsx",[],["91","92"],"/Users/maxchen/Desktop/code/collective/src/components/subreddits/subreddit_view.jsx",["93"],"import React, {useEffect} from \"react\";\nimport {Navbar} from \"./navbar\";\nimport {Posts} from \"./posts_item\";\n// import {Container, Row, Col} from 'react-bootstrap';\nimport \"../styles/subreddit_view.css\";\n\nexport const SubredditView = ({content, listings}) => {\n  const posts = listings.length !== 0 ? listings.map((post, i) => {\n    return (\n    <Posts \n      key={i}\n      post={post}\n      />\n    )\n  }) : [];\n  \n  return (\n    <div \n      className=\"subreddit_view_container\">\n      <div className=\"header\">\n        <Navbar \n          content = {content.url}\n          subreddit_icon = {content.icon_img}\n        />\n      </div>\n      <div className=\"content_view\">\n        {\n          content.banner_size ?\n          <img\n            alt=\"banner_img\"\n            className=\"banner_img\"\n            src={content.banner_background_image}\n          /> : null\n        }\n        {          \n          content.icon_img ? (\n          <img\n            alt=\"subreddit_icon\"\n            className=\"icon_img\"\n            src={content.icon_img}\n          /> \n          ) : null\n        }\n        <div className=\"listingsContainer\">\n          <ul>\n            {posts}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/maxchen/Desktop/code/collective/src/components/subreddits/navbar.jsx",[],"/Users/maxchen/Desktop/code/collective/src/components/subreddits/posts_item.jsx",["94","95","96","97","98","99","100","101","102"],"/Users/maxchen/Desktop/code/collective/src/components/posts_comments.jsx",["103","104","105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":9,"column":13,"nodeType":"112","messageId":"113","endLine":9,"endColumn":23},{"ruleId":"110","severity":1,"message":"114","line":1,"column":26,"nodeType":"112","messageId":"113","endLine":1,"endColumn":35},{"ruleId":"110","severity":1,"message":"115","line":3,"column":9,"nodeType":"112","messageId":"113","endLine":3,"endColumn":19},{"ruleId":"110","severity":1,"message":"116","line":8,"column":10,"nodeType":"112","messageId":"113","endLine":8,"endColumn":17},{"ruleId":"110","severity":1,"message":"117","line":21,"column":10,"nodeType":"112","messageId":"113","endLine":21,"endColumn":17},{"ruleId":"110","severity":1,"message":"118","line":21,"column":19,"nodeType":"112","messageId":"113","endLine":21,"endColumn":37},{"ruleId":"106","replacedBy":"119"},{"ruleId":"108","replacedBy":"120"},{"ruleId":"110","severity":1,"message":"114","line":1,"column":16,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"121","line":3,"column":27,"nodeType":"112","messageId":"113","endLine":3,"endColumn":39},{"ruleId":"110","severity":1,"message":"122","line":3,"column":41,"nodeType":"112","messageId":"113","endLine":3,"endColumn":61},{"ruleId":"110","severity":1,"message":"123","line":3,"column":63,"nodeType":"112","messageId":"113","endLine":3,"endColumn":74},{"ruleId":"110","severity":1,"message":"114","line":4,"column":26,"nodeType":"112","messageId":"113","endLine":4,"endColumn":35},{"ruleId":"124","severity":1,"message":"125","line":39,"column":15,"nodeType":"126","endLine":43,"endColumn":16},{"ruleId":"127","severity":1,"message":"128","line":59,"column":13,"nodeType":"129","messageId":"130","endLine":61,"endColumn":19},{"ruleId":"124","severity":1,"message":"125","line":74,"column":9,"nodeType":"126","endLine":77,"endColumn":10},{"ruleId":"124","severity":1,"message":"125","line":135,"column":30,"nodeType":"126","endLine":138,"endColumn":46},{"ruleId":"124","severity":1,"message":"125","line":169,"column":19,"nodeType":"126","endLine":171,"endColumn":21},{"ruleId":"110","severity":1,"message":"121","line":3,"column":27,"nodeType":"112","messageId":"113","endLine":3,"endColumn":39},{"ruleId":"110","severity":1,"message":"122","line":3,"column":41,"nodeType":"112","messageId":"113","endLine":3,"endColumn":61},{"ruleId":"110","severity":1,"message":"123","line":3,"column":63,"nodeType":"112","messageId":"113","endLine":3,"endColumn":74},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'dropResult' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'DropTarget' is defined but never used.","'canDrop' is assigned a value but never used.","'columns' is assigned a value but never used.","'setNumberOfColumns' is assigned a value but never used.",["131"],["132"],"'processNodes' is defined but never used.","'convertNodeToElement' is defined but never used.","'htmlparser2' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-global-assign","no-unsafe-negation"]